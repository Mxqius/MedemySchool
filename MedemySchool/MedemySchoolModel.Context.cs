//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MedemySchool
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class MedemySchoolEntities : DbContext
    {
        public MedemySchoolEntities()
            : base("name=MedemySchoolEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<tbl_admins> tbl_admins { get; set; }
        public virtual DbSet<tbl_students> tbl_students { get; set; }
        public virtual DbSet<tbl_teachers> tbl_teachers { get; set; }
        public virtual DbSet<uvw_ShowAdmins> uvw_ShowAdmins { get; set; }
        public virtual DbSet<uvw_ShowStudents> uvw_ShowStudents { get; set; }
        public virtual DbSet<uvw_ShowTeachers> uvw_ShowTeachers { get; set; }
    
        public virtual ObjectResult<usp_AddAdmins_Result> usp_AddAdmins(string adminName, string adminPassword, string adminFirstName, string adminLastName, string adminPhoneNumber, string adminEmail, string adminAddress, string adminNationalCode, Nullable<byte> adminGender, Nullable<byte> adminStatus, byte[] adminPicture, Nullable<System.DateTime> adminBirthDay, Nullable<byte> adminRole, string adminCreateDate, string adminCreateTime)
        {
            var adminNameParameter = adminName != null ?
                new ObjectParameter("AdminName", adminName) :
                new ObjectParameter("AdminName", typeof(string));
    
            var adminPasswordParameter = adminPassword != null ?
                new ObjectParameter("AdminPassword", adminPassword) :
                new ObjectParameter("AdminPassword", typeof(string));
    
            var adminFirstNameParameter = adminFirstName != null ?
                new ObjectParameter("AdminFirstName", adminFirstName) :
                new ObjectParameter("AdminFirstName", typeof(string));
    
            var adminLastNameParameter = adminLastName != null ?
                new ObjectParameter("AdminLastName", adminLastName) :
                new ObjectParameter("AdminLastName", typeof(string));
    
            var adminPhoneNumberParameter = adminPhoneNumber != null ?
                new ObjectParameter("AdminPhoneNumber", adminPhoneNumber) :
                new ObjectParameter("AdminPhoneNumber", typeof(string));
    
            var adminEmailParameter = adminEmail != null ?
                new ObjectParameter("AdminEmail", adminEmail) :
                new ObjectParameter("AdminEmail", typeof(string));
    
            var adminAddressParameter = adminAddress != null ?
                new ObjectParameter("AdminAddress", adminAddress) :
                new ObjectParameter("AdminAddress", typeof(string));
    
            var adminNationalCodeParameter = adminNationalCode != null ?
                new ObjectParameter("AdminNationalCode", adminNationalCode) :
                new ObjectParameter("AdminNationalCode", typeof(string));
    
            var adminGenderParameter = adminGender.HasValue ?
                new ObjectParameter("AdminGender", adminGender) :
                new ObjectParameter("AdminGender", typeof(byte));
    
            var adminStatusParameter = adminStatus.HasValue ?
                new ObjectParameter("AdminStatus", adminStatus) :
                new ObjectParameter("AdminStatus", typeof(byte));
    
            var adminPictureParameter = adminPicture != null ?
                new ObjectParameter("AdminPicture", adminPicture) :
                new ObjectParameter("AdminPicture", typeof(byte[]));
    
            var adminBirthDayParameter = adminBirthDay.HasValue ?
                new ObjectParameter("AdminBirthDay", adminBirthDay) :
                new ObjectParameter("AdminBirthDay", typeof(System.DateTime));
    
            var adminRoleParameter = adminRole.HasValue ?
                new ObjectParameter("AdminRole", adminRole) :
                new ObjectParameter("AdminRole", typeof(byte));
    
            var adminCreateDateParameter = adminCreateDate != null ?
                new ObjectParameter("AdminCreateDate", adminCreateDate) :
                new ObjectParameter("AdminCreateDate", typeof(string));
    
            var adminCreateTimeParameter = adminCreateTime != null ?
                new ObjectParameter("AdminCreateTime", adminCreateTime) :
                new ObjectParameter("AdminCreateTime", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_AddAdmins_Result>("usp_AddAdmins", adminNameParameter, adminPasswordParameter, adminFirstNameParameter, adminLastNameParameter, adminPhoneNumberParameter, adminEmailParameter, adminAddressParameter, adminNationalCodeParameter, adminGenderParameter, adminStatusParameter, adminPictureParameter, adminBirthDayParameter, adminRoleParameter, adminCreateDateParameter, adminCreateTimeParameter);
        }
    
        public virtual ObjectResult<usp_AddStudents_Result> usp_AddStudents(string studentName, string studentPassword, string studentFirstName, string studentLastName, string studentPhoneNumber, string studentEmail, string studentAddress, string studentNationalCode, Nullable<byte> studentGender, Nullable<byte> studentStatus, byte[] studentPicture, Nullable<System.DateTime> studentBirthDay, string studentCreateDate, string studentCreateTime)
        {
            var studentNameParameter = studentName != null ?
                new ObjectParameter("StudentName", studentName) :
                new ObjectParameter("StudentName", typeof(string));
    
            var studentPasswordParameter = studentPassword != null ?
                new ObjectParameter("StudentPassword", studentPassword) :
                new ObjectParameter("StudentPassword", typeof(string));
    
            var studentFirstNameParameter = studentFirstName != null ?
                new ObjectParameter("StudentFirstName", studentFirstName) :
                new ObjectParameter("StudentFirstName", typeof(string));
    
            var studentLastNameParameter = studentLastName != null ?
                new ObjectParameter("StudentLastName", studentLastName) :
                new ObjectParameter("StudentLastName", typeof(string));
    
            var studentPhoneNumberParameter = studentPhoneNumber != null ?
                new ObjectParameter("StudentPhoneNumber", studentPhoneNumber) :
                new ObjectParameter("StudentPhoneNumber", typeof(string));
    
            var studentEmailParameter = studentEmail != null ?
                new ObjectParameter("StudentEmail", studentEmail) :
                new ObjectParameter("StudentEmail", typeof(string));
    
            var studentAddressParameter = studentAddress != null ?
                new ObjectParameter("StudentAddress", studentAddress) :
                new ObjectParameter("StudentAddress", typeof(string));
    
            var studentNationalCodeParameter = studentNationalCode != null ?
                new ObjectParameter("StudentNationalCode", studentNationalCode) :
                new ObjectParameter("StudentNationalCode", typeof(string));
    
            var studentGenderParameter = studentGender.HasValue ?
                new ObjectParameter("StudentGender", studentGender) :
                new ObjectParameter("StudentGender", typeof(byte));
    
            var studentStatusParameter = studentStatus.HasValue ?
                new ObjectParameter("StudentStatus", studentStatus) :
                new ObjectParameter("StudentStatus", typeof(byte));
    
            var studentPictureParameter = studentPicture != null ?
                new ObjectParameter("StudentPicture", studentPicture) :
                new ObjectParameter("StudentPicture", typeof(byte[]));
    
            var studentBirthDayParameter = studentBirthDay.HasValue ?
                new ObjectParameter("StudentBirthDay", studentBirthDay) :
                new ObjectParameter("StudentBirthDay", typeof(System.DateTime));
    
            var studentCreateDateParameter = studentCreateDate != null ?
                new ObjectParameter("StudentCreateDate", studentCreateDate) :
                new ObjectParameter("StudentCreateDate", typeof(string));
    
            var studentCreateTimeParameter = studentCreateTime != null ?
                new ObjectParameter("StudentCreateTime", studentCreateTime) :
                new ObjectParameter("StudentCreateTime", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_AddStudents_Result>("usp_AddStudents", studentNameParameter, studentPasswordParameter, studentFirstNameParameter, studentLastNameParameter, studentPhoneNumberParameter, studentEmailParameter, studentAddressParameter, studentNationalCodeParameter, studentGenderParameter, studentStatusParameter, studentPictureParameter, studentBirthDayParameter, studentCreateDateParameter, studentCreateTimeParameter);
        }
    
        public virtual ObjectResult<usp_AddTeachers_Result> usp_AddTeachers(string teacherName, string teacherPassword, string teacherFirstName, string teacherLastName, string teacherPhoneNumber, string teacherEmail, string teacherAddress, string teacherNationalCode, Nullable<byte> teacherGender, Nullable<byte> teacherStatus, byte[] teacherPicture, Nullable<System.DateTime> teacherBirthDay, string teacherCreateDate, string teacherCreateTime)
        {
            var teacherNameParameter = teacherName != null ?
                new ObjectParameter("TeacherName", teacherName) :
                new ObjectParameter("TeacherName", typeof(string));
    
            var teacherPasswordParameter = teacherPassword != null ?
                new ObjectParameter("TeacherPassword", teacherPassword) :
                new ObjectParameter("TeacherPassword", typeof(string));
    
            var teacherFirstNameParameter = teacherFirstName != null ?
                new ObjectParameter("TeacherFirstName", teacherFirstName) :
                new ObjectParameter("TeacherFirstName", typeof(string));
    
            var teacherLastNameParameter = teacherLastName != null ?
                new ObjectParameter("TeacherLastName", teacherLastName) :
                new ObjectParameter("TeacherLastName", typeof(string));
    
            var teacherPhoneNumberParameter = teacherPhoneNumber != null ?
                new ObjectParameter("TeacherPhoneNumber", teacherPhoneNumber) :
                new ObjectParameter("TeacherPhoneNumber", typeof(string));
    
            var teacherEmailParameter = teacherEmail != null ?
                new ObjectParameter("TeacherEmail", teacherEmail) :
                new ObjectParameter("TeacherEmail", typeof(string));
    
            var teacherAddressParameter = teacherAddress != null ?
                new ObjectParameter("TeacherAddress", teacherAddress) :
                new ObjectParameter("TeacherAddress", typeof(string));
    
            var teacherNationalCodeParameter = teacherNationalCode != null ?
                new ObjectParameter("TeacherNationalCode", teacherNationalCode) :
                new ObjectParameter("TeacherNationalCode", typeof(string));
    
            var teacherGenderParameter = teacherGender.HasValue ?
                new ObjectParameter("TeacherGender", teacherGender) :
                new ObjectParameter("TeacherGender", typeof(byte));
    
            var teacherStatusParameter = teacherStatus.HasValue ?
                new ObjectParameter("TeacherStatus", teacherStatus) :
                new ObjectParameter("TeacherStatus", typeof(byte));
    
            var teacherPictureParameter = teacherPicture != null ?
                new ObjectParameter("TeacherPicture", teacherPicture) :
                new ObjectParameter("TeacherPicture", typeof(byte[]));
    
            var teacherBirthDayParameter = teacherBirthDay.HasValue ?
                new ObjectParameter("TeacherBirthDay", teacherBirthDay) :
                new ObjectParameter("TeacherBirthDay", typeof(System.DateTime));
    
            var teacherCreateDateParameter = teacherCreateDate != null ?
                new ObjectParameter("TeacherCreateDate", teacherCreateDate) :
                new ObjectParameter("TeacherCreateDate", typeof(string));
    
            var teacherCreateTimeParameter = teacherCreateTime != null ?
                new ObjectParameter("TeacherCreateTime", teacherCreateTime) :
                new ObjectParameter("TeacherCreateTime", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_AddTeachers_Result>("usp_AddTeachers", teacherNameParameter, teacherPasswordParameter, teacherFirstNameParameter, teacherLastNameParameter, teacherPhoneNumberParameter, teacherEmailParameter, teacherAddressParameter, teacherNationalCodeParameter, teacherGenderParameter, teacherStatusParameter, teacherPictureParameter, teacherBirthDayParameter, teacherCreateDateParameter, teacherCreateTimeParameter);
        }
    
        public virtual ObjectResult<usp_DeleteAdmins_Result> usp_DeleteAdmins(Nullable<int> adminID, Nullable<byte> adminStatus)
        {
            var adminIDParameter = adminID.HasValue ?
                new ObjectParameter("AdminID", adminID) :
                new ObjectParameter("AdminID", typeof(int));
    
            var adminStatusParameter = adminStatus.HasValue ?
                new ObjectParameter("AdminStatus", adminStatus) :
                new ObjectParameter("AdminStatus", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_DeleteAdmins_Result>("usp_DeleteAdmins", adminIDParameter, adminStatusParameter);
        }
    
        public virtual ObjectResult<usp_DeleteStudents_Result> usp_DeleteStudents(Nullable<int> studentID, Nullable<byte> studentStatus)
        {
            var studentIDParameter = studentID.HasValue ?
                new ObjectParameter("StudentID", studentID) :
                new ObjectParameter("StudentID", typeof(int));
    
            var studentStatusParameter = studentStatus.HasValue ?
                new ObjectParameter("StudentStatus", studentStatus) :
                new ObjectParameter("StudentStatus", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_DeleteStudents_Result>("usp_DeleteStudents", studentIDParameter, studentStatusParameter);
        }
    
        public virtual ObjectResult<usp_DeleteTeachers_Result> usp_DeleteTeachers(Nullable<int> teacherID, Nullable<byte> teacherStatus)
        {
            var teacherIDParameter = teacherID.HasValue ?
                new ObjectParameter("TeacherID", teacherID) :
                new ObjectParameter("TeacherID", typeof(int));
    
            var teacherStatusParameter = teacherStatus.HasValue ?
                new ObjectParameter("TeacherStatus", teacherStatus) :
                new ObjectParameter("TeacherStatus", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_DeleteTeachers_Result>("usp_DeleteTeachers", teacherIDParameter, teacherStatusParameter);
        }
    
        public virtual ObjectResult<usp_UpdateAdmins_Result> usp_UpdateAdmins(Nullable<int> adminID, string adminName, string adminPassword, string adminFirstName, string adminLastName, string adminPhoneNumber, string adminEmail, string adminAddress, string adminNationalCode, Nullable<byte> adminGender, Nullable<byte> adminStatus, byte[] adminPicture, Nullable<System.DateTime> adminBirthDay, Nullable<byte> adminRole, string adminCreateDate, string adminCreateTime)
        {
            var adminIDParameter = adminID.HasValue ?
                new ObjectParameter("AdminID", adminID) :
                new ObjectParameter("AdminID", typeof(int));
    
            var adminNameParameter = adminName != null ?
                new ObjectParameter("AdminName", adminName) :
                new ObjectParameter("AdminName", typeof(string));
    
            var adminPasswordParameter = adminPassword != null ?
                new ObjectParameter("AdminPassword", adminPassword) :
                new ObjectParameter("AdminPassword", typeof(string));
    
            var adminFirstNameParameter = adminFirstName != null ?
                new ObjectParameter("AdminFirstName", adminFirstName) :
                new ObjectParameter("AdminFirstName", typeof(string));
    
            var adminLastNameParameter = adminLastName != null ?
                new ObjectParameter("AdminLastName", adminLastName) :
                new ObjectParameter("AdminLastName", typeof(string));
    
            var adminPhoneNumberParameter = adminPhoneNumber != null ?
                new ObjectParameter("AdminPhoneNumber", adminPhoneNumber) :
                new ObjectParameter("AdminPhoneNumber", typeof(string));
    
            var adminEmailParameter = adminEmail != null ?
                new ObjectParameter("AdminEmail", adminEmail) :
                new ObjectParameter("AdminEmail", typeof(string));
    
            var adminAddressParameter = adminAddress != null ?
                new ObjectParameter("AdminAddress", adminAddress) :
                new ObjectParameter("AdminAddress", typeof(string));
    
            var adminNationalCodeParameter = adminNationalCode != null ?
                new ObjectParameter("AdminNationalCode", adminNationalCode) :
                new ObjectParameter("AdminNationalCode", typeof(string));
    
            var adminGenderParameter = adminGender.HasValue ?
                new ObjectParameter("AdminGender", adminGender) :
                new ObjectParameter("AdminGender", typeof(byte));
    
            var adminStatusParameter = adminStatus.HasValue ?
                new ObjectParameter("AdminStatus", adminStatus) :
                new ObjectParameter("AdminStatus", typeof(byte));
    
            var adminPictureParameter = adminPicture != null ?
                new ObjectParameter("AdminPicture", adminPicture) :
                new ObjectParameter("AdminPicture", typeof(byte[]));
    
            var adminBirthDayParameter = adminBirthDay.HasValue ?
                new ObjectParameter("AdminBirthDay", adminBirthDay) :
                new ObjectParameter("AdminBirthDay", typeof(System.DateTime));
    
            var adminRoleParameter = adminRole.HasValue ?
                new ObjectParameter("AdminRole", adminRole) :
                new ObjectParameter("AdminRole", typeof(byte));
    
            var adminCreateDateParameter = adminCreateDate != null ?
                new ObjectParameter("AdminCreateDate", adminCreateDate) :
                new ObjectParameter("AdminCreateDate", typeof(string));
    
            var adminCreateTimeParameter = adminCreateTime != null ?
                new ObjectParameter("AdminCreateTime", adminCreateTime) :
                new ObjectParameter("AdminCreateTime", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_UpdateAdmins_Result>("usp_UpdateAdmins", adminIDParameter, adminNameParameter, adminPasswordParameter, adminFirstNameParameter, adminLastNameParameter, adminPhoneNumberParameter, adminEmailParameter, adminAddressParameter, adminNationalCodeParameter, adminGenderParameter, adminStatusParameter, adminPictureParameter, adminBirthDayParameter, adminRoleParameter, adminCreateDateParameter, adminCreateTimeParameter);
        }
    
        public virtual ObjectResult<usp_UpdateStudents_Result> usp_UpdateStudents(Nullable<int> studentID, string studentName, string studentPassword, string studentFirstName, string studentLastName, string studentPhoneNumber, string studentEmail, string studentAddress, string studentNationalCode, Nullable<byte> studentGender, Nullable<byte> studentStatus, byte[] studentPicture, Nullable<System.DateTime> studentBirthDay, string studentCreateDate, string studentCreateTime)
        {
            var studentIDParameter = studentID.HasValue ?
                new ObjectParameter("StudentID", studentID) :
                new ObjectParameter("StudentID", typeof(int));
    
            var studentNameParameter = studentName != null ?
                new ObjectParameter("StudentName", studentName) :
                new ObjectParameter("StudentName", typeof(string));
    
            var studentPasswordParameter = studentPassword != null ?
                new ObjectParameter("StudentPassword", studentPassword) :
                new ObjectParameter("StudentPassword", typeof(string));
    
            var studentFirstNameParameter = studentFirstName != null ?
                new ObjectParameter("StudentFirstName", studentFirstName) :
                new ObjectParameter("StudentFirstName", typeof(string));
    
            var studentLastNameParameter = studentLastName != null ?
                new ObjectParameter("StudentLastName", studentLastName) :
                new ObjectParameter("StudentLastName", typeof(string));
    
            var studentPhoneNumberParameter = studentPhoneNumber != null ?
                new ObjectParameter("StudentPhoneNumber", studentPhoneNumber) :
                new ObjectParameter("StudentPhoneNumber", typeof(string));
    
            var studentEmailParameter = studentEmail != null ?
                new ObjectParameter("StudentEmail", studentEmail) :
                new ObjectParameter("StudentEmail", typeof(string));
    
            var studentAddressParameter = studentAddress != null ?
                new ObjectParameter("StudentAddress", studentAddress) :
                new ObjectParameter("StudentAddress", typeof(string));
    
            var studentNationalCodeParameter = studentNationalCode != null ?
                new ObjectParameter("StudentNationalCode", studentNationalCode) :
                new ObjectParameter("StudentNationalCode", typeof(string));
    
            var studentGenderParameter = studentGender.HasValue ?
                new ObjectParameter("StudentGender", studentGender) :
                new ObjectParameter("StudentGender", typeof(byte));
    
            var studentStatusParameter = studentStatus.HasValue ?
                new ObjectParameter("StudentStatus", studentStatus) :
                new ObjectParameter("StudentStatus", typeof(byte));
    
            var studentPictureParameter = studentPicture != null ?
                new ObjectParameter("StudentPicture", studentPicture) :
                new ObjectParameter("StudentPicture", typeof(byte[]));
    
            var studentBirthDayParameter = studentBirthDay.HasValue ?
                new ObjectParameter("StudentBirthDay", studentBirthDay) :
                new ObjectParameter("StudentBirthDay", typeof(System.DateTime));
    
            var studentCreateDateParameter = studentCreateDate != null ?
                new ObjectParameter("StudentCreateDate", studentCreateDate) :
                new ObjectParameter("StudentCreateDate", typeof(string));
    
            var studentCreateTimeParameter = studentCreateTime != null ?
                new ObjectParameter("StudentCreateTime", studentCreateTime) :
                new ObjectParameter("StudentCreateTime", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_UpdateStudents_Result>("usp_UpdateStudents", studentIDParameter, studentNameParameter, studentPasswordParameter, studentFirstNameParameter, studentLastNameParameter, studentPhoneNumberParameter, studentEmailParameter, studentAddressParameter, studentNationalCodeParameter, studentGenderParameter, studentStatusParameter, studentPictureParameter, studentBirthDayParameter, studentCreateDateParameter, studentCreateTimeParameter);
        }
    
        public virtual ObjectResult<usp_UpdateTeachers_Result> usp_UpdateTeachers(Nullable<int> teacherID, string teacherName, string teacherPassword, string teacherFirstName, string teacherLastName, string teacherPhoneNumber, string teacherEmail, string teacherAddress, string teacherNationalCode, Nullable<byte> teacherGender, Nullable<byte> teacherStatus, byte[] teacherPicture, Nullable<System.DateTime> teacherBirthDay, string teacherCreateDate, string teacherCreateTime)
        {
            var teacherIDParameter = teacherID.HasValue ?
                new ObjectParameter("TeacherID", teacherID) :
                new ObjectParameter("TeacherID", typeof(int));
    
            var teacherNameParameter = teacherName != null ?
                new ObjectParameter("TeacherName", teacherName) :
                new ObjectParameter("TeacherName", typeof(string));
    
            var teacherPasswordParameter = teacherPassword != null ?
                new ObjectParameter("TeacherPassword", teacherPassword) :
                new ObjectParameter("TeacherPassword", typeof(string));
    
            var teacherFirstNameParameter = teacherFirstName != null ?
                new ObjectParameter("TeacherFirstName", teacherFirstName) :
                new ObjectParameter("TeacherFirstName", typeof(string));
    
            var teacherLastNameParameter = teacherLastName != null ?
                new ObjectParameter("TeacherLastName", teacherLastName) :
                new ObjectParameter("TeacherLastName", typeof(string));
    
            var teacherPhoneNumberParameter = teacherPhoneNumber != null ?
                new ObjectParameter("TeacherPhoneNumber", teacherPhoneNumber) :
                new ObjectParameter("TeacherPhoneNumber", typeof(string));
    
            var teacherEmailParameter = teacherEmail != null ?
                new ObjectParameter("TeacherEmail", teacherEmail) :
                new ObjectParameter("TeacherEmail", typeof(string));
    
            var teacherAddressParameter = teacherAddress != null ?
                new ObjectParameter("TeacherAddress", teacherAddress) :
                new ObjectParameter("TeacherAddress", typeof(string));
    
            var teacherNationalCodeParameter = teacherNationalCode != null ?
                new ObjectParameter("TeacherNationalCode", teacherNationalCode) :
                new ObjectParameter("TeacherNationalCode", typeof(string));
    
            var teacherGenderParameter = teacherGender.HasValue ?
                new ObjectParameter("TeacherGender", teacherGender) :
                new ObjectParameter("TeacherGender", typeof(byte));
    
            var teacherStatusParameter = teacherStatus.HasValue ?
                new ObjectParameter("TeacherStatus", teacherStatus) :
                new ObjectParameter("TeacherStatus", typeof(byte));
    
            var teacherPictureParameter = teacherPicture != null ?
                new ObjectParameter("TeacherPicture", teacherPicture) :
                new ObjectParameter("TeacherPicture", typeof(byte[]));
    
            var teacherBirthDayParameter = teacherBirthDay.HasValue ?
                new ObjectParameter("TeacherBirthDay", teacherBirthDay) :
                new ObjectParameter("TeacherBirthDay", typeof(System.DateTime));
    
            var teacherCreateDateParameter = teacherCreateDate != null ?
                new ObjectParameter("TeacherCreateDate", teacherCreateDate) :
                new ObjectParameter("TeacherCreateDate", typeof(string));
    
            var teacherCreateTimeParameter = teacherCreateTime != null ?
                new ObjectParameter("TeacherCreateTime", teacherCreateTime) :
                new ObjectParameter("TeacherCreateTime", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_UpdateTeachers_Result>("usp_UpdateTeachers", teacherIDParameter, teacherNameParameter, teacherPasswordParameter, teacherFirstNameParameter, teacherLastNameParameter, teacherPhoneNumberParameter, teacherEmailParameter, teacherAddressParameter, teacherNationalCodeParameter, teacherGenderParameter, teacherStatusParameter, teacherPictureParameter, teacherBirthDayParameter, teacherCreateDateParameter, teacherCreateTimeParameter);
        }
    }
}
